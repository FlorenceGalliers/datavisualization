"Stony-Iron")
top20c$class <- factor(top20c$class, levels = c("Iron (Metallic)", "Stony-Iron", "Stony Chondrites"))
# create new column combining name of meteorite and year it fell
top20c$title <- paste(top20c[ , 1],",", top20c[ , 7]) # paste function used here, quite neat
# now re-plot including flags
meteorites02 <- ggplot(top20c, # data used is the top20 including countrys
aes(x = reorder(title, mass), # reorder the x axis by mass. title is the new column created that has the name and the year together.
y = mass,
fill = class)) + # fill by class
geom_segment(aes(x = reorder(title, mass), xend = title,
y = 0, yend = mass,
color = class),
size = 3, alpha = 0.2) +
# adding this second segment to give nice layered line effect
geom_segment(aes(x = reorder(title, mass), xend = title,
y = 0, yend = mass,
color = class),
size = 1, alpha = 0.8) +
geom_flag(aes(x = reorder(title, mass), y = 0, # add flags
country = country_code),
size = 6) +
geom_label(label = round(top20$mass, 0),
nudge_y = 1,
colour = "white",
family = "Avenir",
show.legend = F) +
geom_label(label = "Mass in tonnes",
x = 8.5, y = 48,
colour = "white",
fill = "grey60",
family = "Avenir") +
scale_color_manual(values = c("#8B8682", "coral", "#ffcc00")) +
scale_fill_manual(values = c("#8B8682",  "coral", "#ffcc00")) +
coord_flip(clip = "off") +
# this method of spacing isnt ideal at all... look for a better way to achieve this?
labs(title = "Name of Meteorite,   Year                     Country                                                                                                                                                                                                                                    Mass in Tonnes",
y = "",
x = "") +
theme_minimal() +
theme(
axis.text.y = element_text(hjust = 0,
colour = "#615d5b",
family = "Avenir",
size = 10),
plot.background = element_rect(fill = "white"),
plot.title = element_text(colour = "#8B8682",
family = "Avenir",
size = 8,
vjust = 0,
hjust = 1),
panel.grid = element_blank(),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
legend.title = element_blank(),
legend.position = c(0.77, 0.33),
axis.title.x = element_text(colour = "#615d5b",
family = "Avenir",
size = 10),
axis.text.x = element_blank(),
axis.line.x = element_blank()
) +
annotate("text",
x = 12,
y = 48,
label = "The largest meteorites found\non earth are made of Iron",
color = "#615d5b",
family = "Avenir",
size = 7) +
annotate("text",
x = 10,
y = 48,
label = "18 out of 20 of the largest meteorites that\nhave been found or fallen were made of Iron.",
colour = "#8B8682",
family = "Avenir",
size = 4)
# save file as meteorites02
ggsave(filename = "meteorites02.png", plot = meteorites02,
width = 28, height = 20, unit = "cm")
# import packages
library(leaflet)
library(forcats)
library(leaflet.extras)
# have a look at classes
meteorites$class <- factor(meteorites$class)
unique(meteorites$class) # there is a lot...
# commit to manually assigning all of the classes to only 9 umbrella classifications. This took time, but I could not think of another way to do this -- come back to this?
stony_chondrites_carbonaceous <- c("CR2-an", "CI1", "CV3", "CM2", "OC", "C2-ung",
"CO3.3", "CBa", "CR2", "CO3.2", "CK4", "CO3.5",
"CO3.6", "C3-ung", "CO3.4", "C", "CO3.7", "CH3",
"CO3", "CM1/2", "CM1", "CO3.0", "CV3-an", "CK6",
"CK5", "C6", "C4", "C1-ung", "CK3", "C4-ung",
"CK4/5", "CK3-an", "CR", "CM-an", "CK5/6", "C2",
"C4/5", "CR1", "Relict OC", "CBb", "CH/CBb",
"CO3.8", "CK4-an", "CB", "C5/6-ung", "CV2",
"CK", "OC3", "CK3/4", "CO3.1", "CK3.8", "CM2-an",
"C3.0-ung", "CR7", "CM", "C3/4-ung", "CR-an", "C1/2-ung")
stony_chondrites_ordinary <- c("L5", "H6", "L6", "LL3-6", "H5", "L", "H4", "H",
"LL5", "L/LL4", "L3", "LL6", "L4", "LL4", "LL3.8",
"LL3.15", "LL3.9", "H/L3.9", "H4-an", "L/LL6", "H/L4",
"H4-5", "L3.7", "LL3.4", "H3.8", "H3-5", "H5-6", "H5-7",
"L3-6", "H4-6", "H3", "L/LL5", "H3.7", "H4/5", "H3/4", "H?",
"H3-6", "L3.4", "L3.7-6", "L5/6", "L3.6", "LL3.2", "L3-4",
"H5/6", "L5-6", "LL3.6", "H3-4", "LL", "L4-6", "LL3.00" ,
"H3.4", "LL3.3", "H/L3.6", "LL7", "LL4-6", "L/LL6-an",
"H3.9/4", "L3.8", "LL5-6", "LL3.8-6", "L3.9", "L4-5",
"L3-5", "LL4/5", "L4/5", "H3.9", "H3.6-6", "H3.8-5",
"H3.8/4", "H3.9-5", "L3.9/4", "H~5", "H~6", "L/LL3.10",
"LL3", "L~6", "L~3", "H~4", "L(LL)3.5-3.7", "H3.6", "L3.4-3.7",
"L3.5", "LL7(?)", "LL6(?)", "H3.5-4", "H3.5", "L/LL3",
"H7", "L(?)3", "L3.2", "L3.7-3.9", "LL3.7", "LL3.5",
"L3.7-4", "L3.3", "L3.1", "H3.3", "H3.7-6", "H3.0", "H3.1",
"L3.0", "L/LL3.4", "LL3.0", "H5-an", "L6/7", "Relict H",
"L-imp melt", "H3-an", "L~5", "H3.9-6",  "LL~6", "L3.9-6",
"H-an", "L/LL3-6", "L/LL3-5", "H/L3.5", "H/L3", "LL4-5",
"H/L6", "L3/4", "H-imp melt", "H(L)3-an", "L(LL)3",
"H(L)3", "L7", "L/LL~6", "L/LL~5", "L~4", "L/LL~4",
"LL(L)3 ", "H3.2", "L-melt breccia", "H6-melt breccia",
"H5-melt breccia", "H-melt rock", "LL5/6", "LL3/4",
"H3.4/3.5", "H/L5", "H(5?)", "LL-imp melt", "H~4/5",
"L6-melt breccia", "L3.5-3.7", "L3.3-3.7", "L3.2-3.6",
"L3.3-3.6", "L3.05",  "L/LL3.2", "L3.5-5", "L/LL(?)3",
"H4(?)", "L5-7", "L-melt rock", "H-metal", "L-metal",
"L/LL5/6", "H3.8-4", "H/L~4",  "H4/6", "H3.7-5", "LL3.7-6",
"H3.7/3.8", "L3.7/3.8", "LL-melt rock", "L3.5-3.9",
"L3.2-3.5", "L3.3-3.5", "L3.0-3.7", "L(LL)3.05", "L3.10",
"L/LL4/5", "L3.8-an", "L3.8-6", "LL3.10", "L3.8-5",
"H/L3-4", "L(H)3", "LL6/7", "LL3.1", "LL~4", "LL~4/5",
"L(LL)~4", "H3.05", "H3.10", "LL3-5", "H/L3.7",
"LL3-4", "LL<3.5", "L/LL-melt rock", "H6/7", "L4-melt rock",
"L6-melt rock", "H/L4/5", "H/L6-melt rock", "L3-7", "LL3.05",
"LL4/6", "LL3.8-4", "H3.15", "LL-melt breccia", "LL6-melt breccia",
"L5-melt breccia", "LL(L)3.1", "LL6-an", "L4-melt breccia",
"H4-melt breccia", "L3-melt breccia", "L~4-6", "LL~5",
"H-melt breccia", "L3.00", "H3.0-3.4", "L/LL4-6",
"L4-an", "H3.8/3.9", "L3.9-5", "H3.8-6", "H3.4-5",
"L3.0-3.9", "L3.5-3.8", "H3.2-3.7", "L3.6-4", "L/LL3.5",
"L/LL3.6/3.7", "H/L4-5", "LL~3", "LL5-7", "LL3.9/4", "H3.8-an",
"L/LL5-6", "L(LL)5", "L(LL)6", "LL3.1-3.5", "H3.2-6",
"H(?)4", "H3.2-an", "L/LL", "LL(L)3")
stony_chondrites_enstatite <- c("EH4", "EL6", "EH3/4-an", "EH7-an", "EH3",  "EH5",
"E4", "EL5", "EL3", "E6", "EH4/5", "EL4", "EL4/5",
"E", "EH", "EL6/7", "EL7", "EH-imp melt", "E3-an", "E3",
"EH6", "EL-melt rock", "EL3/4", "EH7", "E-an", "E5",
"E5-an", "EH6-an")
stony_chondrites <- c("Stone-uncl", "K3", "R3.8-6", "R3.8-5", "Chondrite-ung", "R3.6",
"R4", "R3-6", "R3.8", "R3.5-6", "R3-4", "Chondrite-fusion crust",
"R3", "R5", "R", "Fusion crust", "R6", "K", "R3/4", "R3.9", "R4/5",
"R3.7", "R3-5", "R3.4", "R3.5-4")
stony_primitive_achondrites <- c("Acapulcoite", "Ureilite-an", "Ureilite",  "Lodranite",
"Winonaite", "Brachinite",  "Ureilite-pmict",
"Acapulcoite/Lodranite", "Acapulcoite/lodranite",
"Achondrite-prim", "Lodranite-an")
stony_achondrites <- c("Diogenite-pm", "Eucrite-mmict", "Angrite", "Aubrite", "Howardite",
"Eucrite-pmict", "Diogenite", "Eucrite", "Martian (chassignite)",
"Eucrite-cm", "Martian (nakhlite)", "Eucrite-br", "Martian (shergottite)",
"Achondrite-ung", "Martian (OPX)", "Eucrite-Mg rich", "Eucrite-unbr",
"Lunar (anorth)", "Lunar", "Lunar (gabbro)", "Lunar (feldsp. breccia)",
"Eucrite-an", "Lunar (bas/anor)", "Lunar (basalt)", "Diogenite-an",
"Aubrite-an", "Diogenite-olivine", "Lunar (bas. breccia)", "Enst achon",
"Impact melt breccia", "Martian", "Lunar (bas/gab brec)", "Enst achon-ung",
"Howardite-an", "Martian (basaltic breccia)", "Lunar (norite)",
"Stone-ung")
stony_iron_achondrites <- c("Mesosiderite-A1", "Mesosiderite", "Mesosiderite-A3/4",
"Pallasite", "Mesosiderite-A3", "Pallasite, PMG", "Mesosiderite-B2",
"Pallasite, PMG-an", "Mesosiderite-B1", "Mesosiderite-B4",
"Mesosiderite-an", "Mesosiderite-A2", "Pallasite, PES",
"Mesosiderite-A", "Mesosiderite?",  "Mesosiderite-B",
"Mesosiderite-A4", "Mesosiderite-C2", "Pallasite, ungrouped",
"Mesosiderite-C", "Pallasite?")
iron_achondrites <- c("Iron, IVA", "Iron, IIAB", "Iron, IAB-sLL", "Iron, ungrouped",
"Iron, IAB-MG", "Iron?", "Iron, IIIAB", "Iron, IID", "Iron, IIE",
"Iron, IAB-sHL", "Iron", "Iron, IIE-an", "Iron, IAB-ung", "Iron, IIF",
"Iron, IIIAB-an", "Iron, IAB complex", "Iron, IIIE-an",  "Iron, IAB-sLM",
"Iron, IC", "Iron, IID-an", "Iron, IIIE", "Iron, IVA-an", "Iron, IIG",
"Iron, IIC", "Iron, IIIF", "Iron, IVB", "Iron, IAB?", "Iron, IAB-sLH",
"Iron, IIAB-an", "Iron, IIIAB?", "Iron, IAB-sHH", "Relict iron",
"Iron, IAB-an", "Iron, IC-an", "Iron, IAB-sHL-an", "Iron, IIE?")
other_unknown <- c("Unknown")
# use forcats package fct_collapse function to collapse the classes down into the above defined groupings
meteorites_class <- fct_collapse(meteorites$class,
scc = stony_chondrites_carbonaceous,
sco = stony_chondrites_ordinary,
sce = stony_chondrites_enstatite,
sc = stony_chondrites,
spa = stony_primitive_achondrites,
sa = stony_achondrites,
sia = stony_iron_achondrites,
ia = iron_achondrites,
ou = other_unknown)
# turn it into a factor
meteorites$class <- as.factor(meteorites_class)
# have a look at levels
levels(meteorites_class)
# create object that contains labels for use in legend in leaflet plot
labels <- c("Stony Primitive Achondrites",
"Stony Achondrites",
"Stony Chondrites - Carbonaceous",
"Stony Chondrites",
"Stony Chondrites - Enstatite",
"Stony Chondrites - Ordinary",
"Iron Achondrites",
"Stony Iron Achondrites",
"Other / Unknown")
# create bins for color palette
bins <- c(0, 20, 40, 60, 80, 120, 150, Inf)
# create palette
palette <- colorFactor("Paired", domain = meteorites$class)
# create text for label
mytext <- paste(meteorites$name,
"<br/>",
meteorites$year,
"<br/>",
"Size (kg): ", (meteorites$mass)/1000,
"<br/>",
sep="") %>%
lapply(htmltools::HTML)
# leaflet map!
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>% # dark background map for dark night sky effect!
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4, # stop the clustering when zoomed in so can see all the points
spiderfyOnMaxZoom = F # dont make spiderfy effect
),
label = mytext,  # this was created above
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {
paste0(labels)
}
)
library(networkD3)
library(devtools)
#install_github("Displayr/flipPlots") #install from github
library(flipPlots)
library(plyr)
library(dplyr)
# remove zero values
zero_values <- which(meteorites$mass == 0)
meteorites_all <- meteorites[-zero_values, ]
# remove NAs for mass
meteorites_all <- meteorites %>%
na.omit()
# how many meteorites have fallen?
fallen <- meteorites_all %>%
filter(fall == "Fell") %>%
dplyr::summarise(Count = n())
# how many meteorites have been found?
found <- meteorites_all %>%
filter(fall == "Found") %>%
dplyr::summarise(Count = n())
summary(meteorites_all$mass)
hist(meteorites_all$mass, breaks = 10, freq = T)
# how many meteorites in each class, use above classifications
meteorites_all_class <- fct_collapse(meteorites_all$class,
scc = stony_chondrites_carbonaceous,
sco = stony_chondrites_ordinary,
sce = stony_chondrites_enstatite,
sc = stony_chondrites,
spa = stony_primitive_achondrites,
sa = stony_achondrites,
sia = stony_iron_achondrites,
ia = iron_achondrites,
ou = other_unknown)
# make into a factor
meteorites_all$class <- as.factor(meteorites_all_class)
levels(meteorites_all$class)
# revalue the factor levels to be the full names again... annoying...
meteorites_all$class <- revalue(meteorites_all$class,
c("scc" = "Stony Chondrites - Carbonaceous",
"sco" = "Stony Chondrites - Ordinary",
"sce" = "Stony Chondrites - Enstatite",
"sc" = "Stony Chondrites",
"spa" = "Stony Primitive Achondrites",
"sa" = "Stony Achondrites",
"sia" = "Stony-Iron Achondrites",
"ia" = "Iron Achondrites",
"ou" = "Other / Unknown"))
# make the fall column a factor
meteorites_all$fall <- as.factor(meteorites_all$fall)
# make a new column that turns the meteorite masses into categorical variables
meteorites_all$masscat <- cut(meteorites_all$mass, c(-1, 49, 99, 999, 9999, Inf),
labels = c("0-49g", "50-99g", "100g-999g", "1kg-9.999kg", "10kg-60 tonnes"))
# new object, group meteorites by fall, mass category and class and then summarise how many of each there are.
classes <- meteorites_all %>%
group_by(fall, masscat, class) %>%
dplyr::summarise(Count = n())
# create colour palette
colourpalette <- c("grey60", "grey80",
"#AED6F1", "#5DADE2", "#3498DB", "#2874A6", "#1A5276",
"#7D3C98", "#AF7AC5", "#27AE60", "#27AE60", "#ABEBC6", "#1ABC9C", "#C0392B", "#F1C40F")
# Sankey
SankeyDiagram(classes[ ,-4],
link.color = "Source",
weights = classes$Count,
label.show.counts = TRUE,
label.show.varname = F,
font.family = "Avenir",
hovertext.show.percentages = T,
sinks.right = F,
colors = colourpalette)
knitr::opts_chunk$set(echo = TRUE)
# set up and install packages
library(tidyverse)
library(dplyr)
library(ggplot2)
library(viridis)
library(rnaturalearth)
library(countrycode)
library(GGally)
library(doBy)
library(ggrepel)
library(tidyr)
library(ggtext)
setwd("/Users/florentinagalliers/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/03-malaria")
devtools::install_github("jeromefroe/circlepackeR")
library(circlepackeR)
library(data.tree)
library(d3treeR)
library(packcircles)
library(ggplot2)
library(viridis)
library(ggiraph)
library(tidyverse)
# subset incidence data to just 2015
malaria_2015 <- malaria_inc %>%
filter(Year == 2015)
# make new column for continent
malaria_2015$continent <- countrycode(malaria_2015$Entity, "country.name", "continent")
# remove NA values
malaria_2015 <- malaria_2015 %>%
na.omit()
# reduce column name (this is just making a new column...)
malaria_2015$incidence <-  malaria_2015$`Incidence of malaria (per 1,000 population at risk) (per 1,000 population at risk)`
# check data is looking okay
head(malaria_2015)
# subset only the needed columns
malaria <- malaria_2015[ ,-c(2,3,4)]
head(malaria)
# remove any 0 values
malaria <- malaria %>%
filter(incidence > 0)
data <- malaria
# Add a column with the text you want to display for each bubble:
data$text <- paste("Country: ", data$Entity, "\n",
"Incidence Rate:", data$incidence, "\n",
"Continent: ", data$continent, "\n" )
# Generate the layout
packing <- circleProgressiveLayout(data$incidence, sizetype='area')
data <- cbind(data, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 50)
# 50 points for each circle so 51 repetitions here
dat.gg$value <- rep(data$incidence, each = 51)
# style settings for tooltip popups
tooltip_css <- "color:white;padding:10px;font-family: Avenir;border-radius:5px;"
# make the plot
plot_malaria <- ggplot() +
geom_polygon_interactive(data = dat.gg,
aes(x, y,
group = id,
fill = -value, # make highest incidence the darkest colouts
tooltip = data$text[id],
data_id = id),
colour = "black",
alpha = 0.6) +
scale_fill_viridis() +
geom_text(data = data,
aes(x, y,
label = gsub("Country: ", "", Entity),
size = incidence),
color="black",
family = "Avenir") +
scale_size_continuous(range = c(1,3)) +
theme_void() +
labs(title = "Malaria Incidence Rates in 2015") +
theme(legend.position = "none",
plot.margin = unit(c(0,0,0,0),"cm"),
plot.title = element_text(
size = 20,
family = "Avenir"
)) +
coord_equal()
# Turn it interactive
int_malaria <- girafe(ggobj = plot_malaria,
fonts = "Avenir",
options = list(
opts_tooltip(use_fill = T, css = tooltip_css),
opts_hover_inv(css = "opacity:0.4;")))
print(int_malaria)
# Get data
tuesdata <- tidytuesdayR::tt_load('2018-11-13')
malaria_deaths_age <- tuesdata$malaria_deaths_age
malaria_deaths <- tuesdata$malaria_deaths
malaria_inc <- tuesdata$malaria_inc
# Explore the datasets
head(malaria_deaths_age)
# 6 columns
# X1, entity = country, code, year, age group and number of deaths
# There are 30780 observations
# How many countries?
unique(malaria_deaths_age$code) # 197
unique(malaria_deaths_age$entity) #228
unique(malaria_deaths_age$age_group)
# this should be a factor? and ordered
malaria_deaths_age$age_group <- factor(malaria_deaths_age$age_group,
levels = c("Under 5",
"5-14",
"15-49",
"50-69",
"70 or older"))
unique(malaria_deaths_age$year)
# year goes from 1990 to 2016
devtools::install_github("jeromefroe/circlepackeR")
library(circlepackeR)
library(data.tree)
library(d3treeR)
library(packcircles)
library(ggplot2)
library(viridis)
library(ggiraph)
library(tidyverse)
# subset incidence data to just 2015
malaria_2015 <- malaria_inc %>%
filter(Year == 2015)
# make new column for continent
malaria_2015$continent <- countrycode(malaria_2015$Entity, "country.name", "continent")
# remove NA values
malaria_2015 <- malaria_2015 %>%
na.omit()
# reduce column name (this is just making a new column...)
malaria_2015$incidence <-  malaria_2015$`Incidence of malaria (per 1,000 population at risk) (per 1,000 population at risk)`
# check data is looking okay
head(malaria_2015)
# subset only the needed columns
malaria <- malaria_2015[ ,-c(2,3,4)]
head(malaria)
# remove any 0 values
malaria <- malaria %>%
filter(incidence > 0)
data <- malaria
# Add a column with the text you want to display for each bubble:
data$text <- paste("Country: ", data$Entity, "\n",
"Incidence Rate:", data$incidence, "\n",
"Continent: ", data$continent, "\n" )
# Generate the layout
packing <- circleProgressiveLayout(data$incidence, sizetype='area')
data <- cbind(data, packing)
dat.gg <- circleLayoutVertices(packing, npoints = 50)
# 50 points for each circle so 51 repetitions here
dat.gg$value <- rep(data$incidence, each = 51)
# style settings for tooltip popups
tooltip_css <- "color:white;padding:10px;font-family: Avenir;border-radius:5px;"
# make the plot
plot_malaria <- ggplot() +
geom_polygon_interactive(data = dat.gg,
aes(x, y,
group = id,
fill = -value, # make highest incidence the darkest colouts
tooltip = data$text[id],
data_id = id),
colour = "black",
alpha = 0.6) +
scale_fill_viridis() +
geom_text(data = data,
aes(x, y,
label = gsub("Country: ", "", Entity),
size = incidence),
color="black",
family = "Avenir") +
scale_size_continuous(range = c(1,3)) +
theme_void() +
labs(title = "Malaria Incidence Rates in 2015") +
theme(legend.position = "none",
plot.margin = unit(c(0,0,0,0),"cm"),
plot.title = element_text(
size = 20,
family = "Avenir"
)) +
coord_equal()
# Turn it interactive
int_malaria <- girafe(ggobj = plot_malaria,
fonts = "Avenir",
options = list(
opts_tooltip(use_fill = T, css = tooltip_css),
opts_hover_inv(css = "opacity:0.4;")))
print(int_malaria)
runApp('~/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/test')
runApp('~/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/test')
runApp('~/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/01-carbon-emissions/app-1')
runApp('~/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/test')
runApp('malaria-mortality')
runApp('malaria-mortality')
shiny::runApp()
runApp()
setwd("~/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/03-malaria/malaria-mortality")
setwd(~/)
setwd(~\)
setwd(~)
setwd()
