"Small",# Node 3
"Medium", # 4
"large", #5,
"spa",
"sa",
"scc",
"sc",
"sce",
"sco",
"ia",
"sia"
))
links = as.data.frame(matrix(c(
0, 1, 10, # Each row represents a link. The first number
0, 2, 20, # represents the node being conntected from.
1, 3, 30, # the second number represents the node connected to.
2, 3, 40,
),# The third number is the value of the node
byrow = TRUE, ncol = 3))
links = as.data.frame(matrix(c(
0, 1, 10, # Each row represents a link. The first number
0, 2, 20, # represents the node being conntected from.
1, 3, 30, # the second number represents the node connected to.
2, 3, 40
),# The third number is the value of the node
byrow = TRUE, ncol = 3))
names(links) = c("source", "target", "value")
sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
fontSize= 12, nodeWidth = 30)
meteorites_sankey <- meteorites_all[ ,c(4, 5, 6) ]
meteorites_sankey$vsmall <- ifelse(meteorites_sankey$mass < 50, 1, 0)
meteorites_sankey$small <- ifelse((meteorites_sankey$mass >= 50 & meteorites_sankey$mass < 100), 1, 0)
View(meteorites_sankey)
meteorites_sankey$medium <- ifelse((meteorites_sankey$mass >= 100 & meteorites_sankey$mass < 1000), 1, 0)
meteorites_sankey$large <- ifelse((meteorites_sankey$mass >= 1000 & meteorites_sankey$mass <= 60000000), 1, 0)
View(meteorites_sankey)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto"))
# create bins for color palette
bins <- c(0, 20, 40, 60, 80, 120, 150, Inf)
# create palette
palette <- colorFactor("YlOrRd", domain = meteorites$class)
mytext <- paste(meteorites$name,
"<br/>",
meteorites$year,
"<br/>",
"Size (kg): ", (meteorites$mass)/1000,
"<br/>",
sep="") %>%
lapply(htmltools::HTML)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto"))
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = class,
opacity = 1)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = class,
opacity = 1)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1)
# create palette
palette <- colorFactor(rainbow, domain = meteorites$class)
mytext <- paste(meteorites$name,
"<br/>",
meteorites$year,
"<br/>",
"Size (kg): ", (meteorites$mass)/1000,
"<br/>",
sep="") %>%
lapply(htmltools::HTML)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1)
# create palette
palette <- colorFactor("rainbow", domain = meteorites$class)
mytext <- paste(meteorites$name,
"<br/>",
meteorites$year,
"<br/>",
"Size (kg): ", (meteorites$mass)/1000,
"<br/>",
sep="") %>%
lapply(htmltools::HTML)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1)
# create palette
palette <- colorFactor("paired", domain = meteorites$class)
mytext <- paste(meteorites$name,
"<br/>",
meteorites$year,
"<br/>",
"Size (kg): ", (meteorites$mass)/1000,
"<br/>",
sep="") %>%
lapply(htmltools::HTML)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1)
# create palette
palette <- colorFactor("Paired", domain = meteorites$class)
mytext <- paste(meteorites$name,
"<br/>",
meteorites$year,
"<br/>",
"Size (kg): ", (meteorites$mass)/1000,
"<br/>",
sep="") %>%
lapply(htmltools::HTML)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1)
labels <- c("Stony Primitive Achondrites",
"Stony Achondrites",
"Stony Chondrites - Carbonaceous",
"Stony Chondrites",
"Stony Chondrites - Enstatite",
"Stony Chondrites - Ordinary",
"Iron Achondrites",
"Stony Iron Achondrites",
"Other / Unknown")
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
) )
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
)
install.packages("leafletplugins")
library(leafletplugins)
install.packages("leaflet.extras")
library(leaflet.extras)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
) %>%
addSearchFeatures(position = "topleft")
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
) %>%
addSearchFeatures(targetGroups = year)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
) %>%
addSearchFeatures(targetGroups = meteorites$year)
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
) %>%
addSearchFeatures(targetGroups = meteorites$geolocation)
#R Library path#\leaflet.extras\htmlwidgets\build\lfx-search\
R Library path\leaflet.extras\htmlwidgets\build\lfx-search\
leaflet.extras\htmlwidgets\build\lfx-search\
leaflet.extras
leaflet(meteorites) %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
setView(lat = 20, lng = 0, zoom = 1.6) %>%
addCircleMarkers(~long, ~lat, # Points for circles
fillColor = ~palette(class),
fillOpacity = 0.7, # make opaque
color = "white",  # colour of edge?
radius = ~log(mass), # radius
stroke = FALSE, # no edge on circles
weight = 1,# hmm edge of lines?
clusterOptions = markerClusterOptions(
disableClusteringAtZoom = 4,
spiderfyOnMaxZoom = F
),
label = mytext,
labelOptions = labelOptions(style = list("font-weight" = "normal",
padding = "3px 8px"),
textsize = "13px",
direction = "auto")) %>%
addLegend(position = "bottomright",
pal = palette,
values = ~class,
title = "Class of Meteorite",
opacity = 1,
labFormat = function(type, cuts, p) {  # Here's the trick
paste0(labels)
}
)
runApp('~/Google Drive/Harper/6 Data Visualisation & Analytics/Assignment/datavisualization/test')
